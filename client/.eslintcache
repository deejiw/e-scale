[{"/Users/Apple/Downloads/VSCode/e-scale/client/src/index.js":"1","/Users/Apple/Downloads/VSCode/e-scale/client/src/store.js":"2","/Users/Apple/Downloads/VSCode/e-scale/client/src/Routes.js":"3","/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/authActions.js":"4","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/index.js":"5","/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/errorActions.js":"6","/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/types.js":"7","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/errorReducer.js":"8","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/partnerReducer.js":"9","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/authReducer.js":"10","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/transactionReducer.js":"11","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/payerReducer.js":"12","/Users/Apple/Downloads/VSCode/e-scale/client/src/error/customHook.js":"13","/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/transactionActions.js":"14","/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/partnerActions.js":"15","/Users/Apple/Downloads/VSCode/e-scale/client/src/App.js":"16","/Users/Apple/Downloads/VSCode/e-scale/client/src/00_Welcome/Welcome.js":"17","/Users/Apple/Downloads/VSCode/e-scale/client/src/20_Payer/Payer.js":"18","/Users/Apple/Downloads/VSCode/e-scale/client/src/30_Partner/Partner.js":"19","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/Home.js":"20","/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/NavBar.js":"21","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/HistoryList.js":"22","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/ActiveList.js":"23","/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/LoginModal.js":"24","/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/Logout.js":"25","/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/RegisterModal.js":"26","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/types.js":"27","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/CheckModal.js":"28","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/DeleteModal.js":"29","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/AddModal.js":"30","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/HistoryModal.js":"31","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/EditModal.js":"32","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/search/PartnerSearch.js":"33","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/master/accountTypes.js":"34","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/master/banks.js":"35"},{"size":193,"mtime":1613485683253,"results":"36","hashOfConfig":"37"},{"size":420,"mtime":1613488899397,"results":"38","hashOfConfig":"37"},{"size":2076,"mtime":1613488680566,"results":"39","hashOfConfig":"37"},{"size":2401,"mtime":1613481789210,"results":"40","hashOfConfig":"37"},{"size":429,"mtime":1613481789216,"results":"41","hashOfConfig":"37"},{"size":291,"mtime":1613481789210,"results":"42","hashOfConfig":"37"},{"size":1025,"mtime":1613481789212,"results":"43","hashOfConfig":"37"},{"size":522,"mtime":1613481789215,"results":"44","hashOfConfig":"37"},{"size":1042,"mtime":1613481789216,"results":"45","hashOfConfig":"37"},{"size":1269,"mtime":1613481789215,"results":"46","hashOfConfig":"37"},{"size":1011,"mtime":1613481789217,"results":"47","hashOfConfig":"37"},{"size":636,"mtime":1613481789216,"results":"48","hashOfConfig":"37"},{"size":571,"mtime":1613481789214,"results":"49","hashOfConfig":"37"},{"size":2137,"mtime":1613481789211,"results":"50","hashOfConfig":"37"},{"size":1702,"mtime":1613481789211,"results":"51","hashOfConfig":"37"},{"size":353,"mtime":1613488282131,"results":"52","hashOfConfig":"37"},{"size":280,"mtime":1613488336816,"results":"53","hashOfConfig":"37"},{"size":336,"mtime":1613488337205,"results":"54","hashOfConfig":"37"},{"size":2125,"mtime":1613488337207,"results":"55","hashOfConfig":"37"},{"size":2014,"mtime":1613488611192,"results":"56","hashOfConfig":"37"},{"size":2361,"mtime":1613489096789,"results":"57","hashOfConfig":"37"},{"size":1880,"mtime":1613488336286,"results":"58","hashOfConfig":"37"},{"size":7675,"mtime":1613488508665,"results":"59","hashOfConfig":"37"},{"size":2562,"mtime":1613488336731,"results":"60","hashOfConfig":"37"},{"size":468,"mtime":1613488336731,"results":"61","hashOfConfig":"37"},{"size":2892,"mtime":1613487154961,"results":"62","hashOfConfig":"37"},{"size":205,"mtime":1613481789208,"results":"63","hashOfConfig":"37"},{"size":20820,"mtime":1613488336754,"results":"64","hashOfConfig":"37"},{"size":1240,"mtime":1613488336287,"results":"65","hashOfConfig":"37"},{"size":2975,"mtime":1613481789207,"results":"66","hashOfConfig":"37"},{"size":7665,"mtime":1613481789208,"results":"67","hashOfConfig":"37"},{"size":7988,"mtime":1613481789208,"results":"68","hashOfConfig":"37"},{"size":10780,"mtime":1613481789209,"results":"69","hashOfConfig":"37"},{"size":122,"mtime":1613481789207,"results":"70","hashOfConfig":"37"},{"size":697,"mtime":1613481789207,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1an287a",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/Apple/Downloads/VSCode/e-scale/client/src/index.js",[],["149","150"],"/Users/Apple/Downloads/VSCode/e-scale/client/src/store.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/Routes.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/authActions.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/index.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/errorActions.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/types.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/errorReducer.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/partnerReducer.js",["151"],"// Where actual state is going, can check action, send payload\nimport {\n  GET_PARTNER,\n  GET_PARTNERS,\n  ADD_PARTNER,\n  DELETE_PARTNER,\n  PARTNERS_LOADING\n} from '../actions/types'\nconst initialState = {\n  items: [],\n  loading: false\n}\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\nconst partnerReducer = (state = initialState, action) => {\n  switch (\n    action.type // eslint-disable-line no-unused-vars\n  ) {\n    case GET_PARTNERS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      }\n    case DELETE_PARTNER:\n      return {\n        ...state,\n        // Reducer works for MongoDB and thus _id\n        items: state.items.filter(item => item._id !== action.payload)\n      }\n    case ADD_PARTNER:\n      return {\n        // Cannot mutate => copy and append\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n    case PARTNERS_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state\n  }\n}\n\nexport default partnerReducer\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/authReducer.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/transactionReducer.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/reducers/payerReducer.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/error/customHook.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/transactionActions.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/actions/partnerActions.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/App.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/00_Welcome/Welcome.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/20_Payer/Payer.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/30_Partner/Partner.js",["152","153","154","155","156","157","158","159","160"],"// aka container; a  compoenent that is hooked with redux\nimport React, { useState, useRef, useEffect, memo } from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { login } from '../actions/authActions'\nimport { clearErrors } from '../actions/errorActions'\n\nconst Partner = () => {\n  const dispatch = useDispatch()\n  const [state, setState] = useState({\n    modal: false,\n    name: '',\n    email: '',\n    password: '',\n    msg: null\n  })\n\n  const error = useSelector(state => state.error)\n\n  const isAuthenticated = useSelector(state => state.isAuthenticated)\n\n  const usePrevious = value => {\n    const ref = useRef()\n    useEffect(() => {\n      ref.current = value\n    })\n    return ref.current\n  }\n\n  const prevError = usePrevious(error)\n\n  useEffect(() => {\n    if (error !== prevError) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        setState(prevState => ({ ...prevState, msg: error.msg.msg }))\n      } else {\n        setState({ msg: null })\n      }\n    }\n    if (state.modal && isAuthenticated) {\n      toggle()\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prevError])\n\n  const toggle = () => {\n    dispatch(clearErrors())\n    setState(prevState => ({ ...prevState, modal: !prevState.modal }))\n  }\n\n  const onChange = e =>\n    setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\n\n  const onSubmit = e => {\n    e.preventDefault()\n    const { email, password } = state\n    const user = {\n      email,\n      password\n    }\n    dispatch(login(user))\n  }\n\n  return (\n    <div>\n      <Input\n        type='text'\n        name='name'\n        id='name'\n        placeholder='Name'\n        className='mb-3'\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nPartner.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n}\n\nexport default memo(Partner)\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/Home.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/NavBar.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/HistoryList.js",["161"],"import React, { useState, useEffect, memo } from 'react'\nimport { Button, Container, ListGroup, ListGroupItem } from 'reactstrap'\nimport { useDispatch } from 'react-redux'\n\nimport { HISTORY_MODAL } from './modal/types'\nimport PropTypes from 'prop-types'\nimport HistoryModal from './modal/HistoryModal'\nimport { carTemplate, recordTemplate, paymentTemplate } from './ActiveList'\n\n// ****************HistoryList*******************\nconst HistoryList = ({ items, getTransactions }) => {\n  const dispatch = useDispatch()\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    dispatch(getTransactions())\n    setHeader(initialState)\n  }, [])\n\n  const initialState = {\n    isOpen: false,\n    type: null,\n    item: {\n      active: '',\n      name: '',\n      cashAmount: 0,\n      totalAmount: 0,\n      records: [{ ...carTemplate, record: [recordTemplate] }],\n      payment: [paymentTemplate]\n    }\n  }\n  const [header, setHeader] = useState()\n\n  const openView = (modalType, transaction) => {\n    setHeader(prev => ({\n      isOpen: true,\n      type: modalType,\n      item: transaction\n    }))\n  }\n\n  const closeModal = () => {\n    setHeader(initialState)\n  }\n\n  return (\n    <div>\n      <Container>\n        <div style={{ margin: '1rem 0 0 0' }}>\n          <ListGroup>\n            {items\n              .filter(item => item.status.includes('paid'))\n              .map(item => (\n                <ListGroupItem>\n                  <Button\n                    onClick={() => openView(HISTORY_MODAL, item)}\n                    color='dark'>\n                    {item.name}\n                  </Button>\n                  <HistoryModal header={header} toggle={closeModal} />\n                </ListGroupItem>\n              ))}\n          </ListGroup>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nHistoryList.propTypes = {\n  items: PropTypes.object.isRequired\n}\n\nexport default memo(HistoryList)\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/ActiveList.js",["162","163"],"import React, { useState, useEffect, memo } from 'react'\nimport {\n  Button,\n  ButtonGroup,\n  Container,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap'\nimport { useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { ADD_MODAL, CHECK_MODAL, EDIT_MODAL, DELETE_MODAL } from './modal/types'\nimport AddModal from './modal/AddModal'\nimport EditModal from './modal/EditModal'\nimport CheckModal from './modal/CheckModal'\nimport DeleteModal from './modal/DeleteModal'\n\nexport const carTemplate = {\n  plate: ''\n}\nexport const recordTemplate = {\n  material: '',\n  weighIn: 0,\n  weighOut: 0,\n  deduction: 0,\n  remarks: '',\n  price: 0,\n  amount: 0\n}\n\nexport const paymentTemplate = {\n  type: '',\n  bank: '',\n  accountNumber: '',\n  accountName: ''\n}\n\n// ****************ActiveList*******************\nconst ActiveList = ({\n  isAuthenticated,\n  error,\n  clearErrors,\n  items,\n  addTransaction,\n  getTransactions,\n  updateTransaction,\n  checkTransaction,\n  deleteTransaction\n}) => {\n  const dispatch = useDispatch()\n  // eslint-disable-next-line\n  useEffect(() => dispatch(getTransactions()))\n\n  const recordsTemplate = {\n    carTemplate,\n    record: [recordTemplate]\n  }\n\n  const [plate, setPlate] = useState([carTemplate])\n\n  const [header, setHeader] = useState({\n    isOpen: false,\n    type: '',\n    id: '',\n    name: '',\n    cashAmount: 0,\n    totalAmount: 0\n  })\n\n  const [records, setRecords] = useState([recordsTemplate])\n  const [payment, setPayment] = useState([paymentTemplate])\n\n  //onChange handlers\n  const changeHeader = e =>\n    setHeader({ ...header, [e.target.name]: e.target.value })\n\n  const changePlate = (i, e) => {\n    const values = [...plate]\n    values[i][e.target.name] = e.target.value\n    setPlate(values)\n  }\n  const changeRecord = (i, j, e) => {\n    const values = [...records]\n    values[i].record[j][e.target.name] = e.target.value\n    setRecords(values)\n  }\n\n  const [viewDelete, setViewDelete] = useState({\n    isOpen: false,\n    buttonText: 'แก้ไข'\n  })\n\n  const openViewDelete = (modalType, item) =>\n    setHeader({\n      isOpen: true,\n      type: modalType,\n      id: item._id,\n      name: item.name\n    })\n\n  const openViewAdd = modalType =>\n    setHeader({\n      isOpen: true,\n      type: modalType\n    })\n  const openViewEdit = (modalType, item) => {\n    setHeader({\n      isOpen: true,\n      type: modalType,\n      id: item._id,\n      name: item.name\n    })\n\n    setRecords(item.records)\n  }\n  const openViewCheck = (modalType, item) => {\n    setHeader({\n      isOpen: true,\n      type: modalType,\n      id: item._id,\n      name: item.name,\n      dateStart: item.dateStart\n    })\n    setRecords(item.records)\n  }\n\n  // Handle plate\n  const addPlate = () => setPlate([...plate, carTemplate])\n  const removePlate = i => {\n    const values = [...plate]\n    values.splice(i, 1)\n    setPlate(values)\n  }\n\n  // Handle record\n  const addRecord = i => {\n    setRecords(prevRecords => {\n      const lastIndex = prevRecords[i].record.length - 1\n      const prevWeightOut = () => {\n        switch (lastIndex) {\n          case -1:\n            return 0\n          default:\n            return prevRecords[i].record[lastIndex].weighOut\n        }\n      }\n\n      return prevRecords.map((car, index) =>\n        index === i\n          ? {\n              ...car,\n              record: [\n                ...car.record,\n                { recordTemplate, weighIn: prevWeightOut() }\n              ]\n            }\n          : car\n      )\n    })\n  }\n\n  const removeRecord = (i, j) => {\n    setRecords(prevRecords => {\n      prevRecords[i].record.splice(j, 1)\n      return prevRecords.map((car, index) =>\n        index === i ? { ...car, record: prevRecords[i].record } : car\n      )\n    })\n  }\n\n  const submitAdd = e => {\n    e.preventDefault()\n    dispatch(addTransaction(header.name, plate))\n    closeModal()\n  }\n  const submitEdit = e => {\n    e.preventDefault()\n    dispatch(updateTransaction(header, records))\n    closeModal()\n  }\n\n  const closeModal = () => {\n    setHeader({ isOpen: false })\n  }\n\n  return (\n    <div>\n      <Container>\n        <div style={{ margin: '1rem 0 0 0' }}>\n          <Button // Add Record\n            color='success'\n            style={{ margin: '0 0.5rem 1rem 0' }}\n            onClick={() => openViewAdd(ADD_MODAL)}>\n            บิลใหม่\n          </Button>\n\n          <Button // Edit\n            color={viewDelete.buttonText === 'แก้ไข' ? 'primary' : 'warning'}\n            style={{ marginBottom: '1rem', marginRight: '0.5rem' }}\n            onClick={() =>\n              setViewDelete({\n                isOpen: !viewDelete.isOpen,\n                buttonText:\n                  viewDelete.buttonText === 'แก้ไข' ? 'เสร็จ' : 'แก้ไข'\n              })\n            }>\n            {viewDelete.buttonText}\n          </Button>\n\n          <ListGroup>\n            {items\n              .filter(item => item.status.includes('active'))\n              .map(item => (\n                <ListGroupItem>\n                  {viewDelete.isOpen ? (\n                    <ButtonGroup>\n                      <Button\n                        className='remove-btn'\n                        color='danger'\n                        size='sm'\n                        onClick={() => openViewDelete(DELETE_MODAL, item)}>\n                        &times;\n                      </Button>\n                      <Button\n                        color='warning'\n                        size='sm'\n                        onClick={() => openViewCheck(CHECK_MODAL, item)}>\n                        สรุปยอด\n                      </Button>\n                    </ButtonGroup>\n                  ) : null}\n                  <Button\n                    onClick={() => openViewEdit(EDIT_MODAL, item)}\n                    color='dark'>\n                    {item.name}\n                  </Button>\n\n                  <EditModal\n                    header={header}\n                    records={records}\n                    changeHeader={changeHeader}\n                    changeRecord={changeRecord}\n                    handleAddRecord={addRecord}\n                    handleRemoveRecord={removeRecord}\n                    handleSubmit={submitEdit}\n                    toggle={closeModal}\n                  />\n                  <CheckModal\n                    isAuthenticated={isAuthenticated}\n                    error={error}\n                    clearErrors={clearErrors}\n                    header={header}\n                    records={records}\n                    checkTransaction={checkTransaction}\n                    toggle={closeModal}\n                  />\n\n                  <DeleteModal\n                    header={header}\n                    toggle={closeModal}\n                    deleteTransaction={deleteTransaction}\n                  />\n                </ListGroupItem>\n              ))}\n          </ListGroup>\n\n          <AddModal\n            header={header}\n            plate={plate}\n            changeHeader={changeHeader}\n            changePlate={changePlate}\n            handleAddPlate={addPlate}\n            handleRemovePlate={removePlate}\n            handleSubmit={submitAdd}\n            toggle={closeModal}\n          />\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nActiveList.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  error: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  getTransactions: PropTypes.func.isRequired,\n  addTransaction: PropTypes.func.isRequired,\n  updateTransaction: PropTypes.func.isRequired,\n  openViewDelete: PropTypes.func.isRequired,\n  items: PropTypes.object.isRequired\n}\n\nexport default memo(ActiveList)\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/LoginModal.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/Logout.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/80_NavBar/components/RegisterModal.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/types.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/CheckModal.js",["164","165"],"import React, { useState, useEffect, memo } from 'react'\nimport {\n  Container,\n  FormControlLabel,\n  TextField,\n  MenuItem,\n  Grid,\n  Radio,\n  Checkbox\n} from '@material-ui/core'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Row,\n  Label,\n  Alert\n} from 'reactstrap'\nimport { CHECK_MODAL } from './types'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPartners } from '../../actions/partnerActions'\nimport { paymentTemplate } from '../ActiveList'\nimport { accountTypes } from '../master/accountTypes'\nimport { banks } from '../master/banks'\nimport { usePrevious, updateError } from '../../error/customHook'\n\nconst initialState = {\n  isOpen: false,\n  isAccount: false,\n  isAccountReadOnly: false,\n  isReadOnly: false,\n  selected: 0,\n  isCash: false,\n  cashAmount: 0,\n  totalAmount: 0,\n  msg: null\n}\n\nconst CheckModal = ({\n  isAuthenticated,\n  error,\n  clearErrors,\n  header,\n  records,\n  checkTransaction,\n  toggle\n}) => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getPartners(header.name))\n    calculateTotal()\n    return () => {\n      setState(initialState)\n      setActivePayment([])\n    }\n  }, [header.isOpen])\n\n  const prevError = usePrevious(error)\n\n  useEffect(() => {\n    updateError(\n      'SELECT_PAYMENT_FAIL',\n      state,\n      error,\n      prevError,\n      isAuthenticated,\n      setState,\n      toggleModal\n    ) // eslint-disable-next-line\n  }, [prevError])\n\n  const activePartner = useSelector(_ => _.partner.items[0])\n\n  const [payment, setPayment] = useState([])\n\n  useEffect(() => setPayment(activePartner ? activePartner.payment : []), [\n    activePartner\n  ])\n\n  const [state, setState] = useState(initialState)\n\n  const [activePayment, setActivePayment] = useState({\n    ...paymentTemplate\n  })\n\n  const [viewModal, setViewModal] = useState(false)\n\n  const handleAddActivePayment = () => {\n    if (!state.isReadOnly && activePayment.length == 0 && !state.isOpen) {\n      setState(prev => ({\n        ...prev,\n        isAccount: true,\n        isAccountReadOnly: true,\n        isOpen: true\n      }))\n    } else if (\n      !state.isReadOnly &&\n      activePayment.length !== 0 &&\n      state.isOpen\n    ) {\n      setState(prev => ({\n        ...prev,\n        isReadOnly: true\n      }))\n    } else if (state.isReadOnly && state.isAccountReadOnly) {\n      setActivePayment([])\n      setState({\n        ...state,\n        isReadOnly: false,\n        isAccountReadOnly: false,\n        isOpen: false,\n        isAccount: false\n      })\n    }\n  }\n\n  const selectActivePayment = e => {\n    e.preventDefault()\n    toggleModal()\n    setActivePayment(payment[state.selected])\n    setState({\n      isOpen: true,\n      isReadOnly: true,\n      isAccountReadOnly: true\n    })\n  }\n\n  const changeActivePayment = e =>\n    setActivePayment({ ...activePayment, [e.target.name]: e.target.value })\n\n  const changeRadio = e => setState({ ...state, selected: e.target.value })\n\n  const toggleCash = () => setState({ ...state, isCash: !state.isCash })\n\n  const subAmount = []\n\n  const netWeight = (weighIn, weighOut, deduction) =>\n    weighIn - weighOut - deduction\n\n  const amount = (i, j, netWeight, price) => {\n    const _ = netWeight * price\n    if (!subAmount[(i, j)]) {\n      subAmount[(i, j)] = _\n    }\n    return _\n  }\n\n  const calculateTotal = () => {\n    const total = subAmount.reduce((a, b) => a + b, 0)\n    setState({ ...state, totalAmount: total })\n  }\n\n  const handleTotalAmount = () =>\n    setState(prev => ({ ...prev, cashAmount: prev.totalAmount }))\n\n  const formatComma = number => {\n    return number\n      ? number.toLocaleString(undefined, {\n          maximumFractionDigits: 2\n        })\n      : 0\n  }\n\n  const formatAccountNumber = accountNumber => {\n    return accountNumber\n      ? accountNumber\n          .replace(/[^0-9]/g, '')\n          .match(/.{1,4}/g)\n          ?.join('-')\n          .substr(0, 12) || ''\n      : null\n  }\n\n  const toggleModal = () => {\n    setViewModal(!viewModal)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const transaction = {\n      status: 'paid',\n      name: header.name,\n      dateStart: header.dateStart,\n      cashAmount: state.cashAmount,\n      totalAmount: state.totalAmount,\n      payment: [activePayment],\n      records: [records]\n    }\n    dispatch(checkTransaction(header.id, transaction))\n    toggle()\n  }\n  return (\n    <div>\n      <Modal\n        isOpen={header.isOpen && header.type === CHECK_MODAL}\n        toggle={toggle}>\n        <ModalHeader toggle={toggle}>สรุปยอด {header.name}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <Container fluid>\n              <Grid //Header\n                container\n                spacing={1}\n                direction='row'\n                justify='space-between'\n                alignItems='center'>\n                <Grid item xs='4' sm='4'>\n                  <Row>\n                    <h6>สินค้า</h6>\n                  </Row>\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                    <h6>หมายเหตุ</h6>\n                  </Row>\n                </Grid>\n                <Grid item xs='2' sm='2'>\n                  <Row>\n                    <h6>เข้า</h6>\n                  </Row>\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                    <h6>(ออก)</h6>\n                  </Row>\n                </Grid>\n                <Grid item xs='1' sm='1'>\n                  <Row>\n                    <h6>สุทธิ</h6>\n                  </Row>\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                    <h6>(หัก)</h6>\n                  </Row>\n                </Grid>\n                <Grid item xs='2' sm='2'>\n                  <h6>ราคา</h6>\n                </Grid>\n                <Grid item xs='2.5' sm='2.5'>\n                  <h6>จำนวนเงิน</h6>\n                </Grid>\n              </Grid>\n\n              {records.map((\n                record,\n                i //Records\n              ) => (\n                <div key={i}>\n                  <Label style={{ margin: '0 0 0.5rem -1.5rem' }}>\n                    #{record.plate}\n                  </Label>\n\n                  {record.record.map((_, j) => (\n                    <div key={j}>\n                      <Grid\n                        container\n                        spacing={1}\n                        direction='row'\n                        justify='space-between'\n                        alignItems='flex-start'>\n                        <Grid item xs='4' sm='4'>\n                          <Row>{_.material}</Row>\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                            ({_.remarks})\n                          </Row>\n                        </Grid>\n                        <Grid item xs='2' sm='2'>\n                          <Row>{formatComma(_.weighIn)}</Row>\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                            ({formatComma(_.weighOut)})\n                          </Row>\n                        </Grid>\n                        <Grid item xs='1' sm='1'>\n                          <Row>\n                            {formatComma(\n                              netWeight(_.weighIn, _.weighOut, _.deduction)\n                            )}\n                          </Row>\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\n                            ({formatComma(_.deduction)})\n                          </Row>\n                        </Grid>\n                        <Grid item xs='2' sm='2'>\n                          {_.price}\n                        </Grid>\n                        <Grid item xs='2.5' sm='2.5'>\n                          <Label>\n                            ฿\n                            {formatComma(\n                              amount(\n                                i,\n                                j,\n                                netWeight(_.weighIn, _.weighOut, _.deduction),\n                                _.price\n                              )\n                            )}\n                          </Label>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  ))}\n\n                  <hr />\n                </div>\n              ))}\n\n              <Grid //Total Amount\n                container\n                spacing={1}\n                direction='row'\n                justify='flex-end'\n                alignItems='center'\n                style={{ margin: '-0.75rem 0 -0.75rem 0' }}>\n                <Grid item xs={2.5} sm={2.5}>\n                  <Label>ยอดรวมทั้งสิ้น</Label>\n                </Grid>\n                <Grid item xs='auto' sm='auto' md='auto' lg='auto' xl='auto'>\n                  <Button onClick={handleTotalAmount}>\n                    {`฿ ${formatComma(state.totalAmount)}`}\n                  </Button>\n                </Grid>\n              </Grid>\n\n              <hr />\n              <h5>การชำระเงิน</h5>\n\n              <Modal isOpen={viewModal} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>\n                  เลือกวิธีการจ่ายเงิน\n                </ModalHeader>\n                <ModalBody>\n                  {state.msg ? <Alert color='danger'>{state.msg}</Alert> : null}\n                  <Form>\n                    <FormGroup>\n                      {payment.map((_, index) => (\n                        <div key={index}>\n                          <Grid\n                            container\n                            spacing={1}\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='top'>\n                            <Grid item xs={1.5} sm={1.5}>\n                              <Radio\n                                // eslint-disable-next-line\n                                checked={state.selected == index}\n                                onChange={changeRadio}\n                                value={index}\n                                name='paymentRadio'\n                                color='default'\n                                inputProps={{ 'aria-label': 0 }}\n                              />\n                            </Grid>\n                            <Grid item xs={5} sm={5}>\n                              <TextField\n                                name='type'\n                                id='type'\n                                label='ประเภท'\n                                size='small'\n                                value={_.type}\n                                InputProps={{\n                                  readOnly: true\n                                }}\n                              />\n                            </Grid>\n\n                            <Grid item xs={5} sm={5}>\n                              <TextField\n                                name='bank'\n                                id='bank'\n                                label='ธนาคาร'\n                                size='small'\n                                value={_.accountName}\n                                InputProps={{\n                                  readOnly: true\n                                }}\n                              />\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                              <TextField\n                                name='accountNumber'\n                                id='accountNumber'\n                                label='เลขบัญชี'\n                                size='small'\n                                placeholder='เลขบัญชี (10 หลัก)'\n                                value={_.accountNumber}\n                                InputProps={{\n                                  readOnly: true\n                                }}\n                              />\n                            </Grid>\n\n                            <Grid item xs={6}>\n                              <TextField\n                                name='accountName'\n                                id='accountName'\n                                label='ชื่อ'\n                                size='small'\n                                value={_.accountName}\n                                InputProps={{\n                                  readOnly: true\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      ))}\n\n                      <Button\n                        onClick={selectActivePayment}\n                        color='primary'\n                        style={{ margin: '1rem 0 0 0' }}\n                        block>\n                        เลือก\n                      </Button>\n                    </FormGroup>\n                  </Form>\n                </ModalBody>\n              </Modal>\n\n              <Grid\n                container\n                spacing={1}\n                direction='row'\n                justify='flex-start'\n                alignItems='center'\n                style={{ margin: '-0.5rem 0 0.25rem -0.5rem' }}>\n                <Grid item>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        disabled={state.isAccountReadOnly}\n                        checked={state.isAccount}\n                        onChange={() => {\n                          if (!state.isAccount) {\n                            toggleModal()\n                          } else {\n                            setState({\n                              ...state,\n                              isAccount: false,\n                              isReadOnly: false\n                            })\n                            setActivePayment([])\n                          }\n                        }}\n                        name='isAccount'\n                        color='primary'\n                      />\n                    }\n                    label='บัญชีธนาคาร'\n                  />\n                </Grid>\n\n                <Grid item>\n                  <Button\n                    color={state.isReadOnly ? 'danger' : 'info'}\n                    onClick={handleAddActivePayment}>\n                    {state.isReadOnly\n                      ? 'ล้างค่า'\n                      : state.isOpen\n                      ? 'บันทึก'\n                      : 'เพิ่มใหม่'}\n                  </Button>\n                </Grid>\n\n                {state.isAccountReadOnly && !state.isReadOnly ? (\n                  <Grid item>\n                    <Button\n                      color='danger'\n                      onClick={() =>\n                        setState({\n                          ...state,\n                          isOpen: false,\n                          isAccount: false,\n                          isAccountReadOnly: false\n                        })\n                      }>\n                      ยกเลิก\n                    </Button>\n                  </Grid>\n                ) : null}\n              </Grid>\n\n              {state.isOpen ? (\n                <Grid\n                  container\n                  spacing={0.5}\n                  direction='row'\n                  justify='space-between'\n                  alignItems='center'>\n                  <Grid item xs={12} sm={6} md={6}>\n                    <TextField\n                      select\n                      name='type'\n                      id='type'\n                      type='text'\n                      label='ประเภท'\n                      variant='outlined'\n                      fullWidth='true'\n                      size='small'\n                      required='true'\n                      value={activePayment.type}\n                      defaultValue='0'\n                      InputProps={{\n                        readOnly: state.isReadOnly\n                      }}\n                      onChange={e => changeActivePayment(e)}>\n                      {accountTypes.map(option => (\n                        <MenuItem key={option.value} value={option.label}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={5.5}>\n                    <TextField\n                      select\n                      name='bank'\n                      id='bank'\n                      label='ธนาคาร'\n                      variant='outlined'\n                      fullWidth='true'\n                      size='small'\n                      required='true'\n                      value={activePayment.bank}\n                      InputProps={{\n                        readOnly: state.isReadOnly\n                      }}\n                      onChange={e => changeActivePayment(e)}>\n                      {banks.map(option => (\n                        <MenuItem key={option.value} value={option.label}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid\n                    container\n                    spacing={24}\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'>\n                    <Grid item xs={12} sm={6} md={3}>\n                      <TextField\n                        name='accountNumber'\n                        id='accountNumber'\n                        type='text'\n                        label='เลชบัญชี'\n                        variant='outlined'\n                        size='small'\n                        value={formatAccountNumber(activePayment.accountNumber)}\n                        defaultValue='0'\n                        InputProps={{\n                          readOnly: state.isReadOnly\n                        }}\n                        onChange={e => changeActivePayment(e)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={6}>\n                      <TextField\n                        name='accountName'\n                        id='accountName'\n                        type='text'\n                        label='ชื่อ-สกุล'\n                        variant='outlined'\n                        size='small'\n                        value={activePayment.accountName}\n                        defaultValue='0'\n                        InputProps={{\n                          readOnly: state.isReadOnly\n                        }}\n                        onChange={e => changeActivePayment(e)}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              ) : null}\n              <Grid\n                container\n                spacing={1}\n                direction='row'\n                justify='flex-start'\n                alignItems='center'>\n                <Grid item xs={4} sm={3}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.isCash}\n                        onChange={toggleCash}\n                        name='isCash'\n                        color='primary'\n                      />\n                    }\n                    label='เงินสด'\n                  />\n                </Grid>\n                {state.isCash ? (\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      name='cashAmount'\n                      id='cashAmount'\n                      type='number'\n                      label='Cash Amount'\n                      variant='outlined'\n                      size='small'\n                      value={state.cashAmount}\n                      defaultValue='0'\n                      onChange={e =>\n                        setState({ ...state, cashAmount: e.target.value })\n                      }\n                    />\n                  </Grid>\n                ) : null}\n              </Grid>\n\n              <Button\n                color='primary'\n                style={{ margin: '0 0 0 0' }}\n                onClick={handleSubmit}\n                block>\n                ยืนยันการจ่ายเงิน\n              </Button>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  )\n}\n\nexport default memo(CheckModal)\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/DeleteModal.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/AddModal.js",["166"],"import React, { useEffect, memo } from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Row,\n  Col\n} from 'reactstrap'\nimport { Container, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ADD_MODAL } from './types'\nimport PartnerSearch from '../search/PartnerSearch'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(0.75, 0)\n    }\n  }\n}))\n\nconst AddModal = ({\n  header,\n  plate,\n  changeHeader,\n  changePlate,\n  handleSubmit,\n  handleAddPlate,\n  handleRemovePlate,\n  toggle\n}) => {\n  const classes = useStyles()\n\n  return (\n    <Modal isOpen={header.isOpen && header.type === ADD_MODAL} toggle={toggle}>\n      <ModalHeader toggle={toggle}>เพิ่มบิลใหม่</ModalHeader>\n      <ModalBody>\n        <Form className={classes.root}>\n          <Container>\n            <h6>คู่ค้า</h6>\n            <Row style={{ margin: '0 0 -1rem -1rem' }}>\n              <Col>\n                <PartnerSearch changeHeader={changeHeader} />\n              </Col>\n            </Row>\n            <hr />\n            <h6>รถยนต์</h6>\n            {plate.map((car, index) => (\n              <div key={index}>\n                <Row style={{ margin: '0 0 0.5rem -1rem' }}>\n                  <Col xs='8' sm='8'>\n                    <TextField\n                      name='plate'\n                      label='ทะเบียน (XX-XXXX)'\n                      variant='outlined'\n                      id='plate'\n                      margin='dense'\n                      autoFocus='true'\n                      required='true'\n                      value={car.plate}\n                      onChange={e => changePlate(index, e)}\n                    />\n                  </Col>\n                  <Col style={{ margin: '0 0 0 -1.25rem' }}>\n                    <Button\n                      onClick={() => handleRemovePlate(index)}\n                      style={\n                        ({ margin: '0 0 0 -2rem' },\n                        { padding: '0.75rem 1.25rem 0.75rem 1.25rem' })\n                      }\n                      xs='2'\n                      sm='2'\n                      bold='true'\n                      color='danger'>\n                      &minus;\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            ))}\n            <Button\n              style={{ margin: '-0.25rem 0 0 0' }}\n              onClick={() => handleAddPlate()}\n              color='secondary'>\n              เพิ่มรถ\n            </Button>\n            <Button\n              color='success'\n              style={{ margin: '1.5rem 0 0 0' }}\n              block\n              onClick={handleSubmit}>\n              บันทึกบิลใหม่\n            </Button>\n          </Container>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default memo(AddModal)\n","/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/HistoryModal.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/modal/EditModal.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/search/PartnerSearch.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/master/accountTypes.js",[],"/Users/Apple/Downloads/VSCode/e-scale/client/src/10_Home/master/banks.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":3,"column":3,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"175","line":4,"column":3,"nodeType":"173","messageId":"174","endLine":4,"endColumn":9},{"ruleId":"171","severity":1,"message":"176","line":5,"column":3,"nodeType":"173","messageId":"174","endLine":5,"endColumn":8},{"ruleId":"171","severity":1,"message":"177","line":6,"column":3,"nodeType":"173","messageId":"174","endLine":6,"endColumn":14},{"ruleId":"171","severity":1,"message":"178","line":7,"column":3,"nodeType":"173","messageId":"174","endLine":7,"endColumn":12},{"ruleId":"171","severity":1,"message":"179","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":7},{"ruleId":"171","severity":1,"message":"180","line":9,"column":3,"nodeType":"173","messageId":"174","endLine":9,"endColumn":12},{"ruleId":"171","severity":1,"message":"181","line":11,"column":3,"nodeType":"173","messageId":"174","endLine":11,"endColumn":10},{"ruleId":"171","severity":1,"message":"182","line":12,"column":3,"nodeType":"173","messageId":"174","endLine":12,"endColumn":8},{"ruleId":"171","severity":1,"message":"183","line":66,"column":9,"nodeType":"173","messageId":"174","endLine":66,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":18,"column":6,"nodeType":"186","endLine":18,"endColumn":8,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"188","line":71,"column":10,"nodeType":"173","messageId":"174","endLine":71,"endColumn":17},{"ruleId":"171","severity":1,"message":"189","line":71,"column":19,"nodeType":"173","messageId":"174","endLine":71,"endColumn":29},{"ruleId":"184","severity":1,"message":"190","line":60,"column":6,"nodeType":"186","endLine":60,"endColumn":21,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":93,"column":51,"nodeType":"194","messageId":"195","endLine":93,"endColumn":53},{"ruleId":"171","severity":1,"message":"196","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'GET_PARTNER' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'NavLink' is defined but never used.","'Alert' is defined but never used.","'onSubmit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'getTransactions', and 'initialState'. Either include them or remove the dependency array. If 'getTransactions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["199"],"'payment' is assigned a value but never used.","'setPayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calculateTotal', 'dispatch', and 'header.name'. Either include them or remove the dependency array.",["200"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [dispatch, getTransactions, initialState]",{"range":"205","text":"206"},"Update the dependencies array to be: [calculateTotal, dispatch, header.isOpen, header.name]",{"range":"207","text":"208"},[632,634],"[dispatch, getTransactions, initialState]",[1175,1190],"[calculateTotal, dispatch, header.isOpen, header.name]"]