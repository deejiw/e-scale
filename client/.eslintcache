[{"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\index.js":"1","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\store.js":"2","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Routes.js":"3","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\authActions.js":"4","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\Home.js":"5","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\history.js":"6","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\errorActions.js":"7","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\types.js":"8","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\index.js":"9","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\transactionReducer.js":"11","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\payerReducer.js":"12","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\partnerReducer.js":"13","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\errorReducer.js":"14","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\partnerActions.js":"15","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\transactionActions.js":"16","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\HistoryList.js":"17","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\ActiveList.js":"18","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\HistoryModal.js":"19","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\types.js":"20","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\AddModal.js":"21","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\DeleteModal.js":"22","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\CheckModal.js":"23","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\EditModal.js":"24","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\search\\PartnerSearch.js":"25","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\master\\accountTypes.js":"26","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\master\\banks.js":"27","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\error\\customHook.js":"28","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Payer\\Payers.js":"29","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\NavBar.js":"30","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\LoginModal.js":"31","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\RegisterModal.js":"32","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\Logout.js":"33","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Partner\\Partners.js":"34"},{"size":544,"mtime":1612411896518,"results":"35","hashOfConfig":"36"},{"size":400,"mtime":1612153795569,"results":"37","hashOfConfig":"36"},{"size":1385,"mtime":1612421501025,"results":"38","hashOfConfig":"36"},{"size":2522,"mtime":1612153795548,"results":"39","hashOfConfig":"36"},{"size":1329,"mtime":1612412232476,"results":"40","hashOfConfig":"36"},{"size":87,"mtime":1612351437630,"results":"41","hashOfConfig":"36"},{"size":307,"mtime":1612153795548,"results":"42","hashOfConfig":"36"},{"size":1054,"mtime":1612169616299,"results":"43","hashOfConfig":"36"},{"size":443,"mtime":1612169741981,"results":"44","hashOfConfig":"36"},{"size":1331,"mtime":1612153795565,"results":"45","hashOfConfig":"36"},{"size":1057,"mtime":1612153795568,"results":"46","hashOfConfig":"36"},{"size":665,"mtime":1612169787064,"results":"47","hashOfConfig":"36"},{"size":1089,"mtime":1612153795567,"results":"48","hashOfConfig":"36"},{"size":550,"mtime":1612153795566,"results":"49","hashOfConfig":"36"},{"size":1776,"mtime":1612153795549,"results":"50","hashOfConfig":"36"},{"size":2231,"mtime":1612153795549,"results":"51","hashOfConfig":"36"},{"size":2065,"mtime":1612409060651,"results":"52","hashOfConfig":"36"},{"size":7543,"mtime":1612356208224,"results":"53","hashOfConfig":"36"},{"size":7894,"mtime":1612153795563,"results":"54","hashOfConfig":"36"},{"size":210,"mtime":1612153795563,"results":"55","hashOfConfig":"36"},{"size":3078,"mtime":1612153795559,"results":"56","hashOfConfig":"36"},{"size":1337,"mtime":1612351943554,"results":"57","hashOfConfig":"36"},{"size":21569,"mtime":1612354258288,"results":"58","hashOfConfig":"36"},{"size":8214,"mtime":1612153795562,"results":"59","hashOfConfig":"36"},{"size":11125,"mtime":1612351943173,"results":"60","hashOfConfig":"36"},{"size":126,"mtime":1612153795558,"results":"61","hashOfConfig":"36"},{"size":712,"mtime":1612153795558,"results":"62","hashOfConfig":"36"},{"size":601,"mtime":1612354064448,"results":"63","hashOfConfig":"36"},{"size":352,"mtime":1612421597464,"results":"64","hashOfConfig":"36"},{"size":2102,"mtime":1612420877995,"results":"65","hashOfConfig":"36"},{"size":2869,"mtime":1612354301674,"results":"66","hashOfConfig":"36"},{"size":3211,"mtime":1612354301673,"results":"67","hashOfConfig":"36"},{"size":529,"mtime":1612153795555,"results":"68","hashOfConfig":"36"},{"size":2225,"mtime":1612420928491,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13cwj8v",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\index.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\store.js",[],["145","146"],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Routes.js",["147"],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\Home.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\history.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\types.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\index.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\transactionReducer.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\payerReducer.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\partnerReducer.js",["148"],"// Where actual state is going, can check action, send payload\r\nimport {\r\n  GET_PARTNER,\r\n  GET_PARTNERS,\r\n  ADD_PARTNER,\r\n  DELETE_PARTNER,\r\n  PARTNERS_LOADING\r\n} from '../actions/types'\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\n// eslint-disable-next-line react-hooks/exhaustive-deps\r\nconst partnerReducer = (state = initialState, action) => {\r\n  switch (\r\n    action.type // eslint-disable-line no-unused-vars\r\n  ) {\r\n    case GET_PARTNERS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      }\r\n    case DELETE_PARTNER:\r\n      return {\r\n        ...state,\r\n        // Reducer works for MongoDB and thus _id\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      }\r\n    case ADD_PARTNER:\r\n      return {\r\n        // Cannot mutate => copy and append\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      }\r\n    case PARTNERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default partnerReducer\r\n","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\partnerActions.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\actions\\transactionActions.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\HistoryList.js",["149","150"],"import React, { useState, useEffect, memo } from 'react'\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getTransactions } from '../actions/transactionActions'\r\n\r\nimport { HISTORY_MODAL } from './modal/types'\r\nimport PropTypes from 'prop-types'\r\nimport HistoryModal from './modal/HistoryModal'\r\nimport { carTemplate, recordTemplate, paymentTemplate } from './ActiveList'\r\n\r\n// ****************HistoryList*******************\r\nconst HistoryList = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    dispatch(getTransactions())\r\n    setHeader(initialState)\r\n  }, [])\r\n\r\n  const items = useSelector(_ => _.transaction.items)\r\n\r\n  const initialState = {\r\n    isOpen: false,\r\n    type: null,\r\n    item: {\r\n      active: '',\r\n      name: '',\r\n      cashAmount: 0,\r\n      totalAmount: 0,\r\n      records: [{ ...carTemplate, record: [recordTemplate] }],\r\n      payment: [paymentTemplate]\r\n    }\r\n  }\r\n  const [header, setHeader] = useState()\r\n\r\n  const openView = (modalType, transaction) => {\r\n    setHeader(prev => ({\r\n      isOpen: true,\r\n      type: modalType,\r\n      item: transaction\r\n    }))\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setHeader(initialState)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div style={{ margin: '1rem 0 0 0' }}>\r\n          <ListGroup>\r\n            {items\r\n              .filter(item => item.status.includes('paid'))\r\n              .map(item => (\r\n                <ListGroupItem>\r\n                  <Button\r\n                    onClick={() => openView(HISTORY_MODAL, item)}\r\n                    color='dark'>\r\n                    {item.name}\r\n                  </Button>\r\n                  <HistoryModal header={header} toggle={closeModal} />\r\n                </ListGroupItem>\r\n              ))}\r\n          </ListGroup>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nHistoryList.propTypes = {\r\n  items: PropTypes.object.isRequired\r\n}\r\n\r\nexport default memo(HistoryList)\r\n","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\ActiveList.js",["151","152"],"import React, { useState, useEffect, memo } from 'react'\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  addTransaction,\r\n  getTransactions,\r\n  updateTransaction\r\n} from '../actions/transactionActions'\r\n\r\nimport { ADD_MODAL, CHECK_MODAL, EDIT_MODAL, DELETE_MODAL } from './modal/types'\r\nimport AddModal from './modal/AddModal'\r\nimport EditModal from './modal/EditModal'\r\nimport CheckModal from './modal/CheckModal'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteModal from './modal/DeleteModal'\r\n\r\nexport const carTemplate = {\r\n  plate: ''\r\n}\r\nexport const recordTemplate = {\r\n  material: '',\r\n  weighIn: 0,\r\n  weighOut: 0,\r\n  deduction: 0,\r\n  remarks: '',\r\n  price: 0,\r\n  amount: 0\r\n}\r\n\r\nexport const paymentTemplate = {\r\n  type: '',\r\n  bank: '',\r\n  accountNumber: '',\r\n  accountName: ''\r\n}\r\n\r\n// ****************ActiveList*******************\r\nconst ActiveList = () => {\r\n  const dispatch = useDispatch()\r\n  // eslint-disable-next-line\r\n  useEffect(() => dispatch(getTransactions()))\r\n  const items = useSelector(_ => _.transaction.items)\r\n\r\n  const recordsTemplate = {\r\n    carTemplate,\r\n    record: [recordTemplate]\r\n  }\r\n\r\n  const [plate, setPlate] = useState([carTemplate])\r\n\r\n  const [header, setHeader] = useState({\r\n    isOpen: false,\r\n    type: '',\r\n    id: '',\r\n    name: '',\r\n    cashAmount: 0,\r\n    totalAmount: 0\r\n  })\r\n\r\n  const [records, setRecords] = useState([recordsTemplate])\r\n  const [payment, setPayment] = useState([paymentTemplate])\r\n\r\n  //onChange handlers\r\n  const changeHeader = e =>\r\n    setHeader({ ...header, [e.target.name]: e.target.value })\r\n\r\n  const changePlate = (i, e) => {\r\n    const values = [...plate]\r\n    values[i][e.target.name] = e.target.value\r\n    setPlate(values)\r\n  }\r\n  const changeRecord = (i, j, e) => {\r\n    const values = [...records]\r\n    values[i].record[j][e.target.name] = e.target.value\r\n    setRecords(values)\r\n  }\r\n\r\n  const [viewDelete, setViewDelete] = useState({\r\n    isOpen: false,\r\n    buttonText: 'แก้ไข'\r\n  })\r\n\r\n  const openViewDelete = (modalType, item) =>\r\n    setHeader({\r\n      isOpen: true,\r\n      type: modalType,\r\n      id: item._id,\r\n      name: item.name\r\n    })\r\n\r\n  const openViewAdd = modalType =>\r\n    setHeader({\r\n      isOpen: true,\r\n      type: modalType\r\n    })\r\n  const openViewEdit = (modalType, item) => {\r\n    setHeader({\r\n      isOpen: true,\r\n      type: modalType,\r\n      id: item._id,\r\n      name: item.name\r\n    })\r\n\r\n    setRecords(item.records)\r\n  }\r\n  const openViewCheck = (modalType, item) => {\r\n    setHeader({\r\n      isOpen: true,\r\n      type: modalType,\r\n      id: item._id,\r\n      name: item.name,\r\n      dateStart: item.dateStart\r\n    })\r\n    setRecords(item.records)\r\n  }\r\n\r\n  // Handle plate\r\n  const addPlate = () => setPlate([...plate, carTemplate])\r\n  const removePlate = i => {\r\n    const values = [...plate]\r\n    values.splice(i, 1)\r\n    setPlate(values)\r\n  }\r\n\r\n  // Handle record\r\n  const addRecord = i => {\r\n    setRecords(prevRecords => {\r\n      const lastIndex = prevRecords[i].record.length - 1\r\n      const prevWeightOut = () => {\r\n        switch (lastIndex) {\r\n          case -1:\r\n            return 0\r\n          default:\r\n            return prevRecords[i].record[lastIndex].weighOut\r\n        }\r\n      }\r\n\r\n      return prevRecords.map((car, index) =>\r\n        index === i\r\n          ? {\r\n              ...car,\r\n              record: [\r\n                ...car.record,\r\n                { recordTemplate, weighIn: prevWeightOut() }\r\n              ]\r\n            }\r\n          : car\r\n      )\r\n    })\r\n  }\r\n\r\n  const removeRecord = (i, j) => {\r\n    setRecords(prevRecords => {\r\n      prevRecords[i].record.splice(j, 1)\r\n      return prevRecords.map((car, index) =>\r\n        index === i ? { ...car, record: prevRecords[i].record } : car\r\n      )\r\n    })\r\n  }\r\n\r\n  const submitAdd = e => {\r\n    e.preventDefault()\r\n    dispatch(addTransaction(header.name, plate))\r\n    closeModal()\r\n  }\r\n  const submitEdit = e => {\r\n    e.preventDefault()\r\n    dispatch(updateTransaction(header, records))\r\n    closeModal()\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setHeader({ isOpen: false })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div style={{ margin: '1rem 0 0 0' }}>\r\n          <Button // Add Record\r\n            color='success'\r\n            style={{ margin: '0 0.5rem 1rem 0' }}\r\n            onClick={() => openViewAdd(ADD_MODAL)}>\r\n            บิลใหม่\r\n          </Button>\r\n\r\n          <Button // Edit\r\n            color={viewDelete.buttonText === 'แก้ไข' ? 'primary' : 'warning'}\r\n            style={{ marginBottom: '1rem', marginRight: '0.5rem' }}\r\n            onClick={() =>\r\n              setViewDelete({\r\n                isOpen: !viewDelete.isOpen,\r\n                buttonText:\r\n                  viewDelete.buttonText === 'แก้ไข' ? 'เสร็จ' : 'แก้ไข'\r\n              })\r\n            }>\r\n            {viewDelete.buttonText}\r\n          </Button>\r\n\r\n          <ListGroup>\r\n            {items\r\n              .filter(item => item.status.includes('active'))\r\n              .map(item => (\r\n                <ListGroupItem>\r\n                  {viewDelete.isOpen ? (\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        className='remove-btn'\r\n                        color='danger'\r\n                        size='sm'\r\n                        onClick={() => openViewDelete(DELETE_MODAL, item)}>\r\n                        &times;\r\n                      </Button>\r\n                      <Button\r\n                        color='warning'\r\n                        size='sm'\r\n                        onClick={() => openViewCheck(CHECK_MODAL, item)}>\r\n                        สรุปยอด\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  ) : null}\r\n                  <Button\r\n                    onClick={() => openViewEdit(EDIT_MODAL, item)}\r\n                    color='dark'>\r\n                    {item.name}\r\n                  </Button>\r\n\r\n                  <EditModal\r\n                    header={header}\r\n                    records={records}\r\n                    changeHeader={changeHeader}\r\n                    changeRecord={changeRecord}\r\n                    handleAddRecord={addRecord}\r\n                    handleRemoveRecord={removeRecord}\r\n                    handleSubmit={submitEdit}\r\n                    toggle={closeModal}\r\n                  />\r\n                  <CheckModal\r\n                    header={header}\r\n                    records={records}\r\n                    toggle={closeModal}\r\n                  />\r\n\r\n                  <DeleteModal header={header} toggle={closeModal} />\r\n                </ListGroupItem>\r\n              ))}\r\n          </ListGroup>\r\n\r\n          <AddModal\r\n            header={header}\r\n            plate={plate}\r\n            changeHeader={changeHeader}\r\n            changePlate={changePlate}\r\n            handleAddPlate={addPlate}\r\n            handleRemovePlate={removePlate}\r\n            handleSubmit={submitAdd}\r\n            toggle={closeModal}\r\n          />\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nActiveList.propTypes = {\r\n  getTransactions: PropTypes.func.isRequired,\r\n  addTransaction: PropTypes.func.isRequired,\r\n  updateTransaction: PropTypes.func.isRequired,\r\n  openViewDelete: PropTypes.func.isRequired,\r\n  items: PropTypes.object.isRequired\r\n}\r\n\r\nexport default memo(ActiveList)\r\n","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\HistoryModal.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\types.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\AddModal.js",["153"],"import React, { useEffect, memo } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\nimport { Container, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { ADD_MODAL } from './types'\r\nimport PartnerSearch from '../search/PartnerSearch'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(0.75, 0)\r\n    }\r\n  }\r\n}))\r\n\r\nconst AddModal = ({\r\n  header,\r\n  plate,\r\n  changeHeader,\r\n  changePlate,\r\n  handleSubmit,\r\n  handleAddPlate,\r\n  handleRemovePlate,\r\n  toggle\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Modal isOpen={header.isOpen && header.type === ADD_MODAL} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>เพิ่มบิลใหม่</ModalHeader>\r\n      <ModalBody>\r\n        <Form className={classes.root}>\r\n          <Container>\r\n            <h6>คู่ค้า</h6>\r\n            <Row style={{ margin: '0 0 -1rem -1rem' }}>\r\n              <Col>\r\n                <PartnerSearch changeHeader={changeHeader} />\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <h6>รถยนต์</h6>\r\n            {plate.map((car, index) => (\r\n              <div key={index}>\r\n                <Row style={{ margin: '0 0 0.5rem -1rem' }}>\r\n                  <Col xs='8' sm='8'>\r\n                    <TextField\r\n                      name='plate'\r\n                      label='ทะเบียน (XX-XXXX)'\r\n                      variant='outlined'\r\n                      id='plate'\r\n                      margin='dense'\r\n                      autoFocus='true'\r\n                      required='true'\r\n                      value={car.plate}\r\n                      onChange={e => changePlate(index, e)}\r\n                    />\r\n                  </Col>\r\n                  <Col style={{ margin: '0 0 0 -1.25rem' }}>\r\n                    <Button\r\n                      onClick={() => handleRemovePlate(index)}\r\n                      style={\r\n                        ({ margin: '0 0 0 -2rem' },\r\n                        { padding: '0.75rem 1.25rem 0.75rem 1.25rem' })\r\n                      }\r\n                      xs='2'\r\n                      sm='2'\r\n                      bold='true'\r\n                      color='danger'>\r\n                      &minus;\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ))}\r\n            <Button\r\n              style={{ margin: '-0.25rem 0 0 0' }}\r\n              onClick={() => handleAddPlate()}\r\n              color='secondary'>\r\n              เพิ่มรถ\r\n            </Button>\r\n            <Button\r\n              color='success'\r\n              style={{ margin: '1.5rem 0 0 0' }}\r\n              block\r\n              onClick={handleSubmit}>\r\n              บันทึกบิลใหม่\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default memo(AddModal)\r\n","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\DeleteModal.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\CheckModal.js",["154","155"],"import React, { useState, useEffect, memo } from 'react'\r\nimport {\r\n  Container,\r\n  FormControlLabel,\r\n  TextField,\r\n  MenuItem,\r\n  Grid,\r\n  Radio,\r\n  Checkbox\r\n} from '@material-ui/core'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Row,\r\n  Label,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { CHECK_MODAL } from './types'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getPartners } from '../../actions/partnerActions'\r\nimport { checkTransaction } from '../../actions/transactionActions'\r\nimport { paymentTemplate } from '../ActiveList'\r\nimport { accountTypes } from '../master/accountTypes'\r\nimport { banks } from '../master/banks'\r\nimport { usePrevious, updateError } from '../../error/customHook'\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  isAccount: false,\r\n  isAccountReadOnly: false,\r\n  isReadOnly: false,\r\n  selected: 0,\r\n  isCash: false,\r\n  cashAmount: 0,\r\n  totalAmount: 0,\r\n  msg: null\r\n}\r\n\r\nconst CheckModal = ({ header, records, toggle }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getPartners(header.name))\r\n    calculateTotal()\r\n    return () => {\r\n      setState(initialState)\r\n      setActivePayment([])\r\n    }\r\n  }, [header.isOpen])\r\n\r\n  const error = useSelector(state => state.error)\r\n\r\n  const isAuthenticated = useSelector(state => state.isAuthenticated)\r\n\r\n  const prevError = usePrevious(error)\r\n\r\n  useEffect(() => {\r\n    updateError(\r\n      'SELECT_PAYMENT_FAIL',\r\n      state,\r\n      error,\r\n      prevError,\r\n      isAuthenticated,\r\n      setState,\r\n      toggleModal\r\n    ) // eslint-disable-next-line\r\n  }, [prevError])\r\n\r\n  const activePartner = useSelector(_ => _.partner.items[0])\r\n\r\n  const [payment, setPayment] = useState([])\r\n\r\n  useEffect(() => setPayment(activePartner ? activePartner.payment : []), [\r\n    activePartner\r\n  ])\r\n\r\n  const [state, setState] = useState(initialState)\r\n\r\n  const [activePayment, setActivePayment] = useState({\r\n    ...paymentTemplate\r\n  })\r\n\r\n  const [viewModal, setViewModal] = useState(false)\r\n\r\n  const handleAddActivePayment = () => {\r\n    if (!state.isReadOnly && activePayment.length == 0 && !state.isOpen) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        isAccount: true,\r\n        isAccountReadOnly: true,\r\n        isOpen: true\r\n      }))\r\n    } else if (\r\n      !state.isReadOnly &&\r\n      activePayment.length !== 0 &&\r\n      state.isOpen\r\n    ) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        isReadOnly: true\r\n      }))\r\n    } else if (state.isReadOnly && state.isAccountReadOnly) {\r\n      setActivePayment([])\r\n      setState({\r\n        ...state,\r\n        isReadOnly: false,\r\n        isAccountReadOnly: false,\r\n        isOpen: false,\r\n        isAccount: false\r\n      })\r\n    }\r\n  }\r\n\r\n  const selectActivePayment = e => {\r\n    e.preventDefault()\r\n    toggleModal()\r\n    setActivePayment(payment[state.selected])\r\n    setState({\r\n      isOpen: true,\r\n      isReadOnly: true,\r\n      isAccountReadOnly: true\r\n    })\r\n  }\r\n\r\n  const changeActivePayment = e =>\r\n    setActivePayment({ ...activePayment, [e.target.name]: e.target.value })\r\n\r\n  const changeRadio = e => setState({ ...state, selected: e.target.value })\r\n\r\n  const toggleCash = () => setState({ ...state, isCash: !state.isCash })\r\n\r\n  const subAmount = []\r\n\r\n  const netWeight = (weighIn, weighOut, deduction) =>\r\n    weighIn - weighOut - deduction\r\n\r\n  const amount = (i, j, netWeight, price) => {\r\n    const _ = netWeight * price\r\n    if (!subAmount[(i, j)]) {\r\n      subAmount[(i, j)] = _\r\n    }\r\n    return _\r\n  }\r\n\r\n  const calculateTotal = () => {\r\n    const total = subAmount.reduce((a, b) => a + b, 0)\r\n    setState({ ...state, totalAmount: total })\r\n  }\r\n\r\n  const handleTotalAmount = () =>\r\n    setState(prev => ({ ...prev, cashAmount: prev.totalAmount }))\r\n\r\n  const formatComma = number => {\r\n    return number\r\n      ? number.toLocaleString(undefined, {\r\n          maximumFractionDigits: 2\r\n        })\r\n      : 0\r\n  }\r\n\r\n  const formatAccountNumber = accountNumber => {\r\n    return accountNumber\r\n      ? accountNumber\r\n          .replace(/[^0-9]/g, '')\r\n          .match(/.{1,4}/g)\r\n          ?.join('-')\r\n          .substr(0, 12) || ''\r\n      : null\r\n  }\r\n\r\n  const toggleModal = () => {\r\n    setViewModal(!viewModal)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const transaction = {\r\n      status: 'paid',\r\n      name: header.name,\r\n      dateStart: header.dateStart,\r\n      cashAmount: state.cashAmount,\r\n      totalAmount: state.totalAmount,\r\n      payment: [activePayment],\r\n      records: [records]\r\n    }\r\n    dispatch(checkTransaction(header.id, transaction))\r\n    toggle()\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={header.isOpen && header.type === CHECK_MODAL}\r\n        toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>สรุปยอด {header.name}</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <Container fluid>\r\n              <Grid //Header\r\n                container\r\n                spacing={1}\r\n                direction='row'\r\n                justify='space-between'\r\n                alignItems='center'>\r\n                <Grid item xs='4' sm='4'>\r\n                  <Row>\r\n                    <h6>สินค้า</h6>\r\n                  </Row>\r\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                    <h6>หมายเหตุ</h6>\r\n                  </Row>\r\n                </Grid>\r\n                <Grid item xs='2' sm='2'>\r\n                  <Row>\r\n                    <h6>เข้า</h6>\r\n                  </Row>\r\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                    <h6>(ออก)</h6>\r\n                  </Row>\r\n                </Grid>\r\n                <Grid item xs='1' sm='1'>\r\n                  <Row>\r\n                    <h6>สุทธิ</h6>\r\n                  </Row>\r\n                  <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                    <h6>(หัก)</h6>\r\n                  </Row>\r\n                </Grid>\r\n                <Grid item xs='2' sm='2'>\r\n                  <h6>ราคา</h6>\r\n                </Grid>\r\n                <Grid item xs='2.5' sm='2.5'>\r\n                  <h6>จำนวนเงิน</h6>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {records.map((\r\n                record,\r\n                i //Records\r\n              ) => (\r\n                <div key={i}>\r\n                  <Label style={{ margin: '0 0 0.5rem -1.5rem' }}>\r\n                    #{record.plate}\r\n                  </Label>\r\n\r\n                  {record.record.map((_, j) => (\r\n                    <div key={j}>\r\n                      <Grid\r\n                        container\r\n                        spacing={1}\r\n                        direction='row'\r\n                        justify='space-between'\r\n                        alignItems='flex-start'>\r\n                        <Grid item xs='4' sm='4'>\r\n                          <Row>{_.material}</Row>\r\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                            ({_.remarks})\r\n                          </Row>\r\n                        </Grid>\r\n                        <Grid item xs='2' sm='2'>\r\n                          <Row>{formatComma(_.weighIn)}</Row>\r\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                            ({formatComma(_.weighOut)})\r\n                          </Row>\r\n                        </Grid>\r\n                        <Grid item xs='1' sm='1'>\r\n                          <Row>\r\n                            {formatComma(\r\n                              netWeight(_.weighIn, _.weighOut, _.deduction)\r\n                            )}\r\n                          </Row>\r\n                          <Row style={{ margin: '-0.5rem 0 0 -1rem' }}>\r\n                            ({formatComma(_.deduction)})\r\n                          </Row>\r\n                        </Grid>\r\n                        <Grid item xs='2' sm='2'>\r\n                          {_.price}\r\n                        </Grid>\r\n                        <Grid item xs='2.5' sm='2.5'>\r\n                          <Label>\r\n                            ฿\r\n                            {formatComma(\r\n                              amount(\r\n                                i,\r\n                                j,\r\n                                netWeight(_.weighIn, _.weighOut, _.deduction),\r\n                                _.price\r\n                              )\r\n                            )}\r\n                          </Label>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n\r\n              <Grid //Total Amount\r\n                container\r\n                spacing={1}\r\n                direction='row'\r\n                justify='flex-end'\r\n                alignItems='center'\r\n                style={{ margin: '-0.75rem 0 -0.75rem 0' }}>\r\n                <Grid item xs={2.5} sm={2.5}>\r\n                  <Label>ยอดรวมทั้งสิ้น</Label>\r\n                </Grid>\r\n                <Grid item xs='auto' sm='auto' md='auto' lg='auto' xl='auto'>\r\n                  <Button onClick={handleTotalAmount}>\r\n                    {`฿ ${formatComma(state.totalAmount)}`}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <hr />\r\n              <h5>การชำระเงิน</h5>\r\n\r\n              <Modal isOpen={viewModal} toggle={toggleModal}>\r\n                <ModalHeader toggle={toggleModal}>\r\n                  เลือกวิธีการจ่ายเงิน\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  {state.msg ? <Alert color='danger'>{state.msg}</Alert> : null}\r\n                  <Form>\r\n                    <FormGroup>\r\n                      {payment.map((_, index) => (\r\n                        <div key={index}>\r\n                          <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction='row'\r\n                            justify='flex-start'\r\n                            alignItems='top'>\r\n                            <Grid item xs={1.5} sm={1.5}>\r\n                              <Radio\r\n                                // eslint-disable-next-line\r\n                                checked={state.selected == index}\r\n                                onChange={changeRadio}\r\n                                value={index}\r\n                                name='paymentRadio'\r\n                                color='default'\r\n                                inputProps={{ 'aria-label': 0 }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={5} sm={5}>\r\n                              <TextField\r\n                                name='type'\r\n                                id='type'\r\n                                label='ประเภท'\r\n                                size='small'\r\n                                value={_.type}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5} sm={5}>\r\n                              <TextField\r\n                                name='bank'\r\n                                id='bank'\r\n                                label='ธนาคาร'\r\n                                size='small'\r\n                                value={_.accountName}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                              <TextField\r\n                                name='accountNumber'\r\n                                id='accountNumber'\r\n                                label='เลขบัญชี'\r\n                                size='small'\r\n                                placeholder='เลขบัญชี (10 หลัก)'\r\n                                value={_.accountNumber}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                              <TextField\r\n                                name='accountName'\r\n                                id='accountName'\r\n                                label='ชื่อ'\r\n                                size='small'\r\n                                value={_.accountName}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      ))}\r\n\r\n                      <Button\r\n                        onClick={selectActivePayment}\r\n                        color='primary'\r\n                        style={{ margin: '1rem 0 0 0' }}\r\n                        block>\r\n                        เลือก\r\n                      </Button>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </ModalBody>\r\n              </Modal>\r\n\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                direction='row'\r\n                justify='flex-start'\r\n                alignItems='center'\r\n                style={{ margin: '-0.5rem 0 0.25rem -0.5rem' }}>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        disabled={state.isAccountReadOnly}\r\n                        checked={state.isAccount}\r\n                        onChange={() => {\r\n                          if (!state.isAccount) {\r\n                            toggleModal()\r\n                          } else {\r\n                            setState({\r\n                              ...state,\r\n                              isAccount: false,\r\n                              isReadOnly: false\r\n                            })\r\n                            setActivePayment([])\r\n                          }\r\n                        }}\r\n                        name='isAccount'\r\n                        color='primary'\r\n                      />\r\n                    }\r\n                    label='บัญชีธนาคาร'\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Button\r\n                    color={state.isReadOnly ? 'danger' : 'info'}\r\n                    onClick={handleAddActivePayment}>\r\n                    {state.isReadOnly\r\n                      ? 'ล้างค่า'\r\n                      : state.isOpen\r\n                      ? 'บันทึก'\r\n                      : 'เพิ่มใหม่'}\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {state.isAccountReadOnly && !state.isReadOnly ? (\r\n                  <Grid item>\r\n                    <Button\r\n                      color='danger'\r\n                      onClick={() =>\r\n                        setState({\r\n                          ...state,\r\n                          isOpen: false,\r\n                          isAccount: false,\r\n                          isAccountReadOnly: false\r\n                        })\r\n                      }>\r\n                      ยกเลิก\r\n                    </Button>\r\n                  </Grid>\r\n                ) : null}\r\n              </Grid>\r\n\r\n              {state.isOpen ? (\r\n                <Grid\r\n                  container\r\n                  spacing={0.5}\r\n                  direction='row'\r\n                  justify='space-between'\r\n                  alignItems='center'>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <TextField\r\n                      select\r\n                      name='type'\r\n                      id='type'\r\n                      type='text'\r\n                      label='ประเภท'\r\n                      variant='outlined'\r\n                      fullWidth='true'\r\n                      size='small'\r\n                      required='true'\r\n                      value={activePayment.type}\r\n                      defaultValue='0'\r\n                      InputProps={{\r\n                        readOnly: state.isReadOnly\r\n                      }}\r\n                      onChange={e => changeActivePayment(e)}>\r\n                      {accountTypes.map(option => (\r\n                        <MenuItem key={option.value} value={option.label}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={5.5}>\r\n                    <TextField\r\n                      select\r\n                      name='bank'\r\n                      id='bank'\r\n                      label='ธนาคาร'\r\n                      variant='outlined'\r\n                      fullWidth='true'\r\n                      size='small'\r\n                      required='true'\r\n                      value={activePayment.bank}\r\n                      InputProps={{\r\n                        readOnly: state.isReadOnly\r\n                      }}\r\n                      onChange={e => changeActivePayment(e)}>\r\n                      {banks.map(option => (\r\n                        <MenuItem key={option.value} value={option.label}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    spacing={24}\r\n                    direction='row'\r\n                    justify='space-between'\r\n                    alignItems='center'>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                      <TextField\r\n                        name='accountNumber'\r\n                        id='accountNumber'\r\n                        type='text'\r\n                        label='เลชบัญชี'\r\n                        variant='outlined'\r\n                        size='small'\r\n                        value={formatAccountNumber(activePayment.accountNumber)}\r\n                        defaultValue='0'\r\n                        InputProps={{\r\n                          readOnly: state.isReadOnly\r\n                        }}\r\n                        onChange={e => changeActivePayment(e)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                      <TextField\r\n                        name='accountName'\r\n                        id='accountName'\r\n                        type='text'\r\n                        label='ชื่อ-สกุล'\r\n                        variant='outlined'\r\n                        size='small'\r\n                        value={activePayment.accountName}\r\n                        defaultValue='0'\r\n                        InputProps={{\r\n                          readOnly: state.isReadOnly\r\n                        }}\r\n                        onChange={e => changeActivePayment(e)}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                direction='row'\r\n                justify='flex-start'\r\n                alignItems='center'>\r\n                <Grid item xs={4} sm={3}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={state.isCash}\r\n                        onChange={toggleCash}\r\n                        name='isCash'\r\n                        color='primary'\r\n                      />\r\n                    }\r\n                    label='เงินสด'\r\n                  />\r\n                </Grid>\r\n                {state.isCash ? (\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      name='cashAmount'\r\n                      id='cashAmount'\r\n                      type='number'\r\n                      label='Cash Amount'\r\n                      variant='outlined'\r\n                      size='small'\r\n                      value={state.cashAmount}\r\n                      defaultValue='0'\r\n                      onChange={e =>\r\n                        setState({ ...state, cashAmount: e.target.value })\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n              </Grid>\r\n\r\n              <Button\r\n                color='primary'\r\n                style={{ margin: '0 0 0 0' }}\r\n                onClick={handleSubmit}\r\n                block>\r\n                ยืนยันการจ่ายเงิน\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CheckModal)\r\n","C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\modal\\EditModal.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\search\\PartnerSearch.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\master\\accountTypes.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Home\\master\\banks.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\error\\customHook.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Payer\\Payers.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\NavBar.js",["156","157"],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\LoginModal.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\RegisterModal.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\tjiw\\Downloads\\VSCode\\e-scale\\client\\src\\Partner\\Partners.js",["158","159","160","161","162","163","164","165","166"],"// aka container; a  compoenent that is hooked with redux\r\nimport React, { useState, useRef, useEffect, memo } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { login } from '../actions/authActions'\r\nimport { clearErrors } from '../actions/errorActions'\r\n\r\nconst Partners = () => {\r\n  const dispatch = useDispatch()\r\n  const [state, setState] = useState({\r\n    modal: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  })\r\n\r\n  const error = useSelector(state => state.error)\r\n\r\n  const isAuthenticated = useSelector(state => state.isAuthenticated)\r\n\r\n  const usePrevious = value => {\r\n    const ref = useRef()\r\n    useEffect(() => {\r\n      ref.current = value\r\n    })\r\n    return ref.current\r\n  }\r\n\r\n  const prevError = usePrevious(error)\r\n\r\n  useEffect(() => {\r\n    if (error !== prevError) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        setState(prevState => ({ ...prevState, msg: error.msg.msg }))\r\n      } else {\r\n        setState({ msg: null })\r\n      }\r\n    }\r\n    if (state.modal && isAuthenticated) {\r\n      toggle()\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [prevError])\r\n\r\n  const toggle = () => {\r\n    dispatch(clearErrors())\r\n    setState(prevState => ({ ...prevState, modal: !prevState.modal }))\r\n  }\r\n\r\n  const onChange = e =>\r\n    setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    const { email, password } = state\r\n    const user = {\r\n      email,\r\n      password\r\n    }\r\n    dispatch(login(user))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        type='text'\r\n        name='name'\r\n        id='name'\r\n        placeholder='Name'\r\n        className='mb-3'\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nPartners.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired\r\n}\r\n\r\nexport default memo(Partners)\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":21,"column":9,"nodeType":"173","messageId":"174","endLine":21,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":3,"column":3,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"176","line":4,"column":3,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":26,"column":6,"nodeType":"179","endLine":26,"endColumn":8,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"181","line":68,"column":10,"nodeType":"173","messageId":"174","endLine":68,"endColumn":17},{"ruleId":"171","severity":1,"message":"182","line":68,"column":19,"nodeType":"173","messageId":"174","endLine":68,"endColumn":29},{"ruleId":"171","severity":1,"message":"183","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"184","line":53,"column":6,"nodeType":"179","endLine":53,"endColumn":21,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":90,"column":51,"nodeType":"188","messageId":"189","endLine":90,"endColumn":53},{"ruleId":"171","severity":1,"message":"190","line":18,"column":8,"nodeType":"173","messageId":"174","endLine":18,"endColumn":15},{"ruleId":"171","severity":1,"message":"191","line":19,"column":8,"nodeType":"173","messageId":"174","endLine":19,"endColumn":13},{"ruleId":"171","severity":1,"message":"192","line":4,"column":3,"nodeType":"173","messageId":"174","endLine":4,"endColumn":9},{"ruleId":"171","severity":1,"message":"193","line":5,"column":3,"nodeType":"173","messageId":"174","endLine":5,"endColumn":8},{"ruleId":"171","severity":1,"message":"194","line":6,"column":3,"nodeType":"173","messageId":"174","endLine":6,"endColumn":14},{"ruleId":"171","severity":1,"message":"195","line":7,"column":3,"nodeType":"173","messageId":"174","endLine":7,"endColumn":12},{"ruleId":"171","severity":1,"message":"196","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":7},{"ruleId":"171","severity":1,"message":"197","line":9,"column":3,"nodeType":"173","messageId":"174","endLine":9,"endColumn":12},{"ruleId":"171","severity":1,"message":"198","line":11,"column":3,"nodeType":"173","messageId":"174","endLine":11,"endColumn":10},{"ruleId":"171","severity":1,"message":"199","line":12,"column":3,"nodeType":"173","messageId":"174","endLine":12,"endColumn":8},{"ruleId":"171","severity":1,"message":"200","line":66,"column":9,"nodeType":"173","messageId":"174","endLine":66,"endColumn":17},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'NoMatch' is assigned a value but never used.","Identifier","unusedVar","'GET_PARTNER' is defined but never used.","'ButtonGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'initialState'. Either include them or remove the dependency array.","ArrayExpression",["203"],"'payment' is assigned a value but never used.","'setPayment' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateTotal', 'dispatch', and 'header.name'. Either include them or remove the dependency array.",["204"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Partner' is defined but never used.","'Payer' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'NavLink' is defined but never used.","'Alert' is defined but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [dispatch, initialState]",{"range":"209","text":"210"},"Update the dependencies array to be: [calculateTotal, dispatch, header.isOpen, header.name]",{"range":"211","text":"212"},[732,734],"[dispatch, initialState]",[1226,1241],"[calculateTotal, dispatch, header.isOpen, header.name]"]