[{"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\index.js":"1","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\App.js":"2","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\store.js":"4","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ItemModal.js":"5","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ShoppingList.js":"6","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\AppNavBar.js":"7","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\index.js":"8","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\itemActions.js":"9","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\types.js":"10","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\itemReducer.js":"11","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\authReducer.js":"12","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\errorReducer.js":"13","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\authActions.js":"14","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\errorActions.js":"15","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\RegisterModal.js":"16","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\Logout.js":"17","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\LoginModal.js":"18"},{"size":472,"mtime":1608176757513,"results":"19","hashOfConfig":"20"},{"size":734,"mtime":1608280955038,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":400,"mtime":1607943668990,"results":"23","hashOfConfig":"20"},{"size":1942,"mtime":1608279587229,"results":"24","hashOfConfig":"20"},{"size":1592,"mtime":1608176687029,"results":"25","hashOfConfig":"20"},{"size":1427,"mtime":1608281015316,"results":"26","hashOfConfig":"20"},{"size":297,"mtime":1608203262281,"results":"27","hashOfConfig":"20"},{"size":911,"mtime":1608177299129,"results":"28","hashOfConfig":"20"},{"size":604,"mtime":1608259173015,"results":"29","hashOfConfig":"20"},{"size":909,"mtime":1608177218950,"results":"30","hashOfConfig":"20"},{"size":1302,"mtime":1608277477945,"results":"31","hashOfConfig":"20"},{"size":519,"mtime":1608203465242,"results":"32","hashOfConfig":"20"},{"size":2522,"mtime":1608277441853,"results":"33","hashOfConfig":"20"},{"size":307,"mtime":1608262721107,"results":"34","hashOfConfig":"20"},{"size":3538,"mtime":1608276800103,"results":"35","hashOfConfig":"20"},{"size":556,"mtime":1608276798567,"results":"36","hashOfConfig":"20"},{"size":3102,"mtime":1608277553413,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xwhc8f",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\index.js",[],["79","80"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\App.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\store.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ItemModal.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ShoppingList.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\AppNavBar.js",["81"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\itemActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\types.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\itemReducer.js",["82"],"// Where actual state is going, can check action, send payload\r\nimport {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  ITEMS_LOADING\r\n} from '../actions/types'\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      }\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        // Reducer works for MongoDB and thus _id\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      }\r\n    case ADD_ITEM:\r\n      return {\r\n        // Cannot mutate => copy and append\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      }\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\authReducer.js",["83"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\errorReducer.js",["84"],"import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      }\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\RegisterModal.js",["85"],"// aka container; a  compoenent that is hooked with redux\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { register } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions'\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg })\r\n      } else {\r\n        this.setState({ msg: null })\r\n      }\r\n    }\r\n\r\n    // If authenticate, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle()\r\n      }\r\n    }\r\n  }\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors()\r\n\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = e => {\r\n    // Prevent the actual form from submitting\r\n    e.preventDefault()\r\n\r\n    const { name, email, password } = this.state\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    }\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  placeholder='Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n  RegisterModal\r\n)\r\n","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\LoginModal.js",["86"],"// aka container; a  compoenent that is hooked with redux\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions'\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg })\r\n      } else {\r\n        this.setState({ msg: null })\r\n      }\r\n    }\r\n\r\n    // If authenticate, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle()\r\n      }\r\n    }\r\n  }\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors()\r\n\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = e => {\r\n    // Prevent the actual form from submitting\r\n    e.preventDefault()\r\n\r\n    const { email, password } = this.state\r\n    const user = {\r\n      email,\r\n      password\r\n    }\r\n    this.props.login(user)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal)\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":9,"column":3,"nodeType":"93","messageId":"94","endLine":9,"endColumn":10},{"ruleId":"95","severity":1,"message":"96","line":13,"column":1,"nodeType":"97","endLine":41,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":19,"column":1,"nodeType":"97","endLine":60,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":9,"column":1,"nodeType":"97","endLine":26,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":37,"column":15,"nodeType":"100","messageId":"101","endLine":37,"endColumn":17},{"ruleId":"91","severity":1,"message":"102","line":10,"column":3,"nodeType":"93","messageId":"94","endLine":10,"endColumn":8},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]