[{"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\index.js":"1","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\App.js":"2","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\store.js":"4","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ItemModal.js":"5","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ShoppingList.js":"6","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\AppNavBar.js":"7","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\index.js":"8","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\itemActions.js":"9","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\types.js":"10","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\itemReducer.js":"11","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\authReducer.js":"12","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\errorReducer.js":"13","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\authActions.js":"14","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\errorActions.js":"15","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\RegisterModal.js":"16","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\Logout.js":"17","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\LoginModal.js":"18"},{"size":472,"mtime":1608176757513,"results":"19","hashOfConfig":"20"},{"size":734,"mtime":1608280955038,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":400,"mtime":1607943668990,"results":"23","hashOfConfig":"20"},{"size":2271,"mtime":1608283927471,"results":"24","hashOfConfig":"20"},{"size":1778,"mtime":1608283086100,"results":"25","hashOfConfig":"20"},{"size":1645,"mtime":1608281652273,"results":"26","hashOfConfig":"20"},{"size":297,"mtime":1608203262281,"results":"27","hashOfConfig":"20"},{"size":1431,"mtime":1608282205349,"results":"28","hashOfConfig":"20"},{"size":604,"mtime":1608259173015,"results":"29","hashOfConfig":"20"},{"size":957,"mtime":1608283930855,"results":"30","hashOfConfig":"20"},{"size":1350,"mtime":1608283930854,"results":"31","hashOfConfig":"20"},{"size":567,"mtime":1608283494687,"results":"32","hashOfConfig":"20"},{"size":2522,"mtime":1608283246994,"results":"33","hashOfConfig":"20"},{"size":307,"mtime":1608262721107,"results":"34","hashOfConfig":"20"},{"size":3538,"mtime":1608276800103,"results":"35","hashOfConfig":"20"},{"size":556,"mtime":1608276798567,"results":"36","hashOfConfig":"20"},{"size":3102,"mtime":1608277553413,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xwhc8f",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\index.js",[],["78","79"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\App.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\store.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ItemModal.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\ShoppingList.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\AppNavBar.js",["80"],"import React, { useState, Fragment } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from 'reactstrap'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport RegisterModal from './auth/RegisterModal'\r\nimport LoginModal from './auth/LoginModal'\r\nimport Logout from './auth/Logout'\r\n\r\nexport const AppNavBar = () => {\r\n  const handleToggle = () => setIsOpen(!isOpen)\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\r\n\r\n  const user = useSelector(state => state.auth.user)\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <NavItem>\r\n        <span className='navbar-text mr-3'>\r\n          <strong>{user ? `Welcome ${user.name}` : ''}</strong>\r\n        </span>\r\n      </NavItem>\r\n      <NavItem>\r\n        <Logout />\r\n      </NavItem>\r\n    </Fragment>\r\n  )\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <NavItem>\r\n        <RegisterModal />\r\n      </NavItem>\r\n      <NavItem>\r\n        <LoginModal />\r\n      </NavItem>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color='dark' dark expand='sm' className='mb-5'>\r\n        <Container>\r\n          <NavbarBrand href='/'>ShoppingList</NavbarBrand>\r\n          {/* Handle clicking toggle */}\r\n          <NavbarToggler onClick={handleToggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            {/* Margin Left Auto */}\r\n            <Nav className='ml-auto' navbar>\r\n              {isAuthenticated ? authLinks : guestLinks}\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\itemActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\types.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\itemReducer.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\authReducer.js",["81"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\reducers\\errorReducer.js",["82"],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\RegisterModal.js",["83"],"// aka container; a  compoenent that is hooked with redux\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { register } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions'\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg })\r\n      } else {\r\n        this.setState({ msg: null })\r\n      }\r\n    }\r\n\r\n    // If authenticate, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle()\r\n      }\r\n    }\r\n  }\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors()\r\n\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = e => {\r\n    // Prevent the actual form from submitting\r\n    e.preventDefault()\r\n\r\n    const { name, email, password } = this.state\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    }\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  placeholder='Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n  RegisterModal\r\n)\r\n","C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\tjiw\\Downloads\\mern-app\\client\\src\\components\\auth\\LoginModal.js",["84"],"// aka container; a  compoenent that is hooked with redux\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/authActions'\r\nimport { clearErrors } from '../../actions/errorActions'\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg })\r\n      } else {\r\n        this.setState({ msg: null })\r\n      }\r\n    }\r\n\r\n    // If authenticate, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle()\r\n      }\r\n    }\r\n  }\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors()\r\n\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = e => {\r\n    // Prevent the actual form from submitting\r\n    e.preventDefault()\r\n\r\n    const { email, password } = this.state\r\n    const user = {\r\n      email,\r\n      password\r\n    }\r\n    this.props.login(user)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal)\r\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":9,"column":3,"nodeType":"91","messageId":"92","endLine":9,"endColumn":10},{"ruleId":"93","severity":1,"message":"94","line":19,"column":1,"nodeType":"95","endLine":62,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":9,"column":1,"nodeType":"95","endLine":28,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":37,"column":15,"nodeType":"98","messageId":"99","endLine":37,"endColumn":17},{"ruleId":"89","severity":1,"message":"100","line":10,"column":3,"nodeType":"91","messageId":"92","endLine":10,"endColumn":8},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]